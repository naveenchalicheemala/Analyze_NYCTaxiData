<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='df_csv' inline='true' name='federated.1fse45a1exu6aj18nm3de17ysnvh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_csv' name='textscan.0efxtff06gtzz816xa9eu0eg5jxd'>
            <connection class='textscan' directory='C:/Studies/Fullstory' filename='df_csv.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0efxtff06gtzz816xa9eu0eg5jxd' name='df_csv.csv' table='[df_csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='VendorID' ordinal='0' />
            <column datatype='datetime' name='tpep_pickup_datetime' ordinal='1' />
            <column datatype='datetime' name='tpep_dropoff_datetime' ordinal='2' />
            <column datatype='integer' name='passenger_count' ordinal='3' />
            <column datatype='real' name='trip_distance' ordinal='4' />
            <column datatype='integer' name='RatecodeID' ordinal='5' />
            <column datatype='string' name='store_and_fwd_flag' ordinal='6' />
            <column datatype='integer' name='PULocationID' ordinal='7' />
            <column datatype='integer' name='DOLocationID' ordinal='8' />
            <column datatype='integer' name='payment_type' ordinal='9' />
            <column datatype='real' name='fare_amount' ordinal='10' />
            <column datatype='real' name='extra' ordinal='11' />
            <column datatype='real' name='mta_tax' ordinal='12' />
            <column datatype='real' name='tip_amount' ordinal='13' />
            <column datatype='real' name='tolls_amount' ordinal='14' />
            <column datatype='real' name='improvement_surcharge' ordinal='15' />
            <column datatype='real' name='total_amount' ordinal='16' />
            <column datatype='real' name='trip_duration' ordinal='17' />
            <column datatype='integer' name='pickup_year' ordinal='18' />
            <column datatype='integer' name='dropoff_year' ordinal='19' />
            <column datatype='integer' name='Pickup_Month' ordinal='20' />
            <column datatype='string' name='Pickup_Day' ordinal='21' />
            <column datatype='integer' name='Pickup_Hour' ordinal='22' />
            <column datatype='integer' name='Dropoff_Month' ordinal='23' />
            <column datatype='string' name='Dropoff_Day' ordinal='24' />
            <column datatype='integer' name='Dropoff_Hour' ordinal='25' />
            <column datatype='string' name='Borough_Pickup' ordinal='26' />
            <column datatype='string' name='Borough_Dropoff' ordinal='27' />
            <column datatype='real' name='tip_rate' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VendorID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VendorID]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>VendorID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tpep_pickup_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[tpep_pickup_datetime]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>tpep_pickup_datetime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tpep_dropoff_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[tpep_dropoff_datetime]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>tpep_dropoff_datetime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_distance]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>trip_distance</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatecodeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatecodeID]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>RatecodeID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_and_fwd_flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_and_fwd_flag]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>store_and_fwd_flag</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PULocationID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PULocationID]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>PULocationID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOLocationID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOLocationID]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>DOLocationID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[payment_type]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>payment_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fare_amount]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>fare_amount</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extra]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>extra</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mta_tax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mta_tax]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>mta_tax</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip_amount]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>tip_amount</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tolls_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tolls_amount]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>tolls_amount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>improvement_surcharge</remote-name>
            <remote-type>5</remote-type>
            <local-name>[improvement_surcharge]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>improvement_surcharge</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_amount]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>total_amount</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_duration]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>trip_duration</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_year]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>pickup_year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dropoff_year]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>dropoff_year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup_Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pickup_Month]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Pickup_Month</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup_Day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup_Day]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Pickup_Day</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup_Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pickup_Hour]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Pickup_Hour</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dropoff_Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dropoff_Month]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Dropoff_Month</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dropoff_Day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dropoff_Day]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Dropoff_Day</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dropoff_Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dropoff_Hour]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Dropoff_Hour</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Borough_Pickup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Borough_Pickup]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Borough_Pickup</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Borough_Dropoff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Borough_Dropoff]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>Borough_Dropoff</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip_rate]</local-name>
            <parent-name>[df_csv.csv]</parent-name>
            <remote-alias>tip_rate</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Borough Dropoff' datatype='string' name='[Borough_Dropoff]' role='dimension' type='nominal' />
      <column caption='Borough Pickup' datatype='string' name='[Borough_Pickup]' role='dimension' type='nominal' />
      <column caption='TripDuration_minutes' datatype='real' name='[Calculation_2677952941130141696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[trip_duration]/60' />
      </column>
      <column caption='DO Location ID' datatype='integer' name='[DOLocationID]' role='dimension' type='ordinal' />
      <column caption='Dropoff Day' datatype='string' name='[Dropoff_Day]' role='dimension' type='nominal' />
      <column caption='Dropoff Hour' datatype='integer' name='[Dropoff_Hour]' role='measure' type='quantitative' />
      <column caption='Dropoff Month' datatype='integer' name='[Dropoff_Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='PU Location ID' datatype='integer' name='[PULocationID]' role='dimension' type='ordinal' />
      <column caption='Pickup Day' datatype='string' name='[Pickup_Day]' role='dimension' type='nominal' />
      <column caption='Pickup Hour' datatype='integer' name='[Pickup_Hour]' role='measure' type='quantitative' />
      <column caption='Pickup Month' datatype='integer' name='[Pickup_Month]' role='dimension' type='quantitative' />
      <column caption='Ratecode ID' datatype='integer' name='[RatecodeID]' role='dimension' type='ordinal' />
      <column caption='Vendor ID' datatype='integer' name='[VendorID]' role='dimension' type='ordinal' />
      <column caption='Dropoff Year' datatype='integer' name='[dropoff_year]' role='dimension' type='quantitative' />
      <column caption='Extra' datatype='real' name='[extra]' role='measure' type='quantitative' />
      <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
      <column caption='Improvement Surcharge' datatype='real' name='[improvement_surcharge]' role='measure' type='quantitative' />
      <column caption='Mta Tax' datatype='real' name='[mta_tax]' role='measure' type='quantitative' />
      <column caption='Passenger Count' datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
      <column caption='Payment Type' datatype='integer' name='[payment_type]' role='measure' type='quantitative' />
      <column caption='Pickup Year' datatype='integer' name='[pickup_year]' role='dimension' type='quantitative' />
      <column caption='Store And Fwd Flag' datatype='string' name='[store_and_fwd_flag]' role='dimension' type='nominal' />
      <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
      <column caption='Tip Rate' datatype='real' name='[tip_rate]' role='measure' type='quantitative' />
      <column caption='Tolls Amount' datatype='real' name='[tolls_amount]' role='measure' type='quantitative' />
      <column caption='Total Amount' datatype='real' name='[total_amount]' role='measure' type='quantitative' />
      <column caption='Tpep Dropoff Datetime' datatype='datetime' name='[tpep_dropoff_datetime]' role='dimension' type='ordinal' />
      <column caption='Tpep Pickup Datetime' datatype='datetime' name='[tpep_pickup_datetime]' role='dimension' type='ordinal' />
      <column caption='Trip Distance' datatype='real' name='[trip_distance]' role='measure' type='quantitative' />
      <column caption='Trip Duration' datatype='real' name='[trip_duration]' role='measure' type='quantitative' />
      <column-instance column='[total_amount]' derivation='Count' name='[cnt:total_amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2677952941130141696]' derivation='Median' name='[med:Calculation_2677952941130141696:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.559322' measure-ordering='alphabetic' measure-percentage='0.440678' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1fse45a1exu6aj18nm3de17ysnvh].[cnt:total_amount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fse45a1exu6aj18nm3de17ysnvh].[med:Calculation_2677952941130141696:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='RideCount_TripdurPerHour'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_csv' name='federated.1fse45a1exu6aj18nm3de17ysnvh' />
          </datasources>
          <datasource-dependencies datasource='federated.1fse45a1exu6aj18nm3de17ysnvh'>
            <column caption='TripDuration_minutes' datatype='real' name='[Calculation_2677952941130141696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trip_duration]/60' />
            </column>
            <column caption='Pickup Day' datatype='string' name='[Pickup_Day]' role='dimension' type='nominal' />
            <column caption='Pickup Hour' datatype='integer' name='[Pickup_Hour]' role='measure' type='quantitative' />
            <column-instance column='[total_amount]' derivation='Count' name='[cnt:total_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2677952941130141696]' derivation='Median' name='[med:Calculation_2677952941130141696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pickup_Day]' derivation='None' name='[none:Pickup_Day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pickup_Hour]' derivation='None' name='[none:Pickup_Hour:qk]' pivot='key' type='quantitative' />
            <column caption='Total Amount' datatype='real' name='[total_amount]' role='measure' type='quantitative' />
            <column caption='Trip Duration' datatype='real' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fse45a1exu6aj18nm3de17ysnvh].[med:Calculation_2677952941130141696:qk]' scope='rows' value='Trip in minutes' />
            <format attr='title' class='0' field='[federated.1fse45a1exu6aj18nm3de17ysnvh].[cnt:total_amount:qk]' scope='rows' value='Ride Count' />
            <encoding attr='space' class='0' field='[federated.1fse45a1exu6aj18nm3de17ysnvh].[cnt:total_amount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1fse45a1exu6aj18nm3de17ysnvh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fse45a1exu6aj18nm3de17ysnvh].[cnt:total_amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1fse45a1exu6aj18nm3de17ysnvh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fse45a1exu6aj18nm3de17ysnvh].[med:Calculation_2677952941130141696:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1fse45a1exu6aj18nm3de17ysnvh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1fse45a1exu6aj18nm3de17ysnvh].[none:Pickup_Day:nk] * ([federated.1fse45a1exu6aj18nm3de17ysnvh].[med:Calculation_2677952941130141696:qk] + [federated.1fse45a1exu6aj18nm3de17ysnvh].[cnt:total_amount:qk]))</rows>
        <cols>[federated.1fse45a1exu6aj18nm3de17ysnvh].[none:Pickup_Hour:qk]</cols>
      </table>
      <simple-id uuid='{7B4A9F37-5121-4D9C-9702-2915D8DFC94A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='RideCount_TripdurPerHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1fse45a1exu6aj18nm3de17ysnvh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fse45a1exu6aj18nm3de17ysnvh].[:Measure Names]</field>
            <field>[federated.1fse45a1exu6aj18nm3de17ysnvh].[none:Pickup_Day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37707600-0A7C-4581-86D8-AB3E13319544}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='576' name='RideCount_TripdurPerHour' width='576'>
      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
      AImIiIjb+RMOydA7ViwTRwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
